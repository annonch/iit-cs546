#+TITLE: cs546 hw2 Shared Memory Programming
#+AUTHOR: Christopher Hannon
#+EMAIL: channon@iit.edu 
#+OPTIONS: H:2 num:nil toc:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+STARTUP: showall
#+LANGUAGE:  en
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+INFOJS_OPT: view:showall toc:t ltoc:t mouse:underline path:http://orgmode.org/org-info.js
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/notebook.css" />

* How to install
cd code && gcc -pthread -fopenmp -o dle ./dle.c

* Usage
 ./dle mode size_of_N
- Where mode = 0-3
- 0 - sequential
- 1 - pthreads
- 2 - openmp
- 3 - Test all (not implemented)
- and N = [1-1000] the size of the matrix A

* Algorithms
Additional information on how the algorithms work can be found in the comments in the source file.

** Sequential
The sequential implementation is done using only one thread with no parallelism as a baseline to compare the parallel implemenations with.

** Pthreads 1


Empirical data shows on Linux falcon 3.16.0-4-amd64 #1 SMP Debian 3.16.39-1+deb8u1 | N                   | 1        | 10       | 50       | 100      | 500     | 700     | 1000   |
|---------------------+----------+----------+----------+----------+---------+---------+--------|
| avg_time_openMP     | 0.0002 s | 0.031 s  | 0.142 s  | 0.299 s  | 2.13 s  | 4.1 s   | 7.8 s  |
| avg_time_pthreads 2 | 0.0002 s | 0.035 s  | 0.87 s   | 3.31 s   | 50.2 s  | 94.8 s  | x      |
| avg_time_pthreads 1 | 0.017 ms | 2.1 ms   | 39 ms    | 153 ms   | 4100 ms | 8650 ms | x      |
| avg_time_seq        | 0.0002 s | 0.0006 s | 0.0038 s | 0.0135 s | 0.48 s  | 1.19 s  | 2.05 s |

I think that because the openMP implementation uses only 8 threads its performance is better than the pthreads implemenations.
To make the pthreads implementations better we can restrict the number of threads created.
* Screenshots
  #+CAPTION: Screenshot of sequential executing on OSX.
  #+NAME:   fig:1
  #+ATTR_HTML: :width 60% :height 60% 
  [[../s/ScreenShot1.png]] 
  #+CAPTION: Screenshot of OpenMP running on Debian.
  #+NAME:   fig:2
  #+ATTR_HTML: :width 60% :height 60% 
  [[../s/ScreenShot2.png]]

* Reference
  -  https://stackoverflow.com/questions/459691/best-timing-method-in-c
  -  https://devtalk.nvidia.com/default/topic/453819/cuda-programming-and-performance/the-game-of-life-in-cuda/2
  -  https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life


