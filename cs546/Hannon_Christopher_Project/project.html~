<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>cs546 Term Project: MPI Programming</title>
<!-- 2017-12-08 Fri 12:13 -->
<meta  http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta  name="generator" content="Org-mode" />
<meta  name="author" content="Christopher Hannon" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center; }
  .todo   { font-family: monospace; color: red; }
  .done   { color: green; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  pre.src-sh:before    { content: 'sh'; }
  pre.src-bash:before  { content: 'sh'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-R:before     { content: 'R'; }
  pre.src-perl:before  { content: 'Perl'; }
  pre.src-java:before  { content: 'Java'; }
  pre.src-sql:before   { content: 'SQL'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.right  { text-align: center;  }
  th.left   { text-align: center;   }
  th.center { text-align: center; }
  td.right  { text-align: right;  }
  td.left   { text-align: left;   }
  td.center { text-align: center; }
  dt { font-weight: bold; }
  .footpara:nth-child(2) { display: inline; }
  .footpara { display: block; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  /*]]>*/-->
</style>
<link rel="stylesheet" type="text/css" href="../css/notebook.css" />

<script type="text/javascript" src="http://orgmode.org/org-info.js">
/**
 *
 * @source: http://orgmode.org/org-info.js
 *
 * @licstart  The following is the entire license notice for the
 *  JavaScript code in http://orgmode.org/org-info.js.
 *
 * Copyright (C) 2012-2013 Free Software Foundation, Inc.
 *
 *
 * The JavaScript code in this tag is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 *
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 *
 * @licend  The above is the entire license notice
 * for the JavaScript code in http://orgmode.org/org-info.js.
 *
 */
</script>

<script type="text/javascript">

/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/

<!--/*--><![CDATA[/*><!--*/
org_html_manager.set("TOC_DEPTH", "2");
org_html_manager.set("LINK_HOME", "");
org_html_manager.set("LINK_UP", "");
org_html_manager.set("LOCAL_TOC", "1");
org_html_manager.set("VIEW_BUTTONS", "0");
org_html_manager.set("MOUSE_HINT", "underline");
org_html_manager.set("FIXED_TOC", "0");
org_html_manager.set("TOC", "1");
org_html_manager.set("VIEW", "showall");
org_html_manager.setup();  // activate after the parameters are set
/*]]>*///-->
</script>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
<script type="text/javascript" src="http://orgmode.org/mathjax/MathJax.js"></script>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
    MathJax.Hub.Config({
        // Only one of the two following lines, depending on user settings
        // First allows browser-native MathML display, second forces HTML/CSS
        //  config: ["MMLorHTML.js"], jax: ["input/TeX"],
            jax: ["input/TeX", "output/HTML-CSS"],
        extensions: ["tex2jax.js","TeX/AMSmath.js","TeX/AMSsymbols.js",
                     "TeX/noUndefined.js"],
        tex2jax: {
            inlineMath: [ ["\\(","\\)"] ],
            displayMath: [ ['$$','$$'], ["\\[","\\]"], ["\\begin{displaymath}","\\end{displaymath}"] ],
            skipTags: ["script","noscript","style","textarea","pre","code"],
            ignoreClass: "tex2jax_ignore",
            processEscapes: false,
            processEnvironments: true,
            preview: "TeX"
        },
        showProcessingMessages: true,
        displayAlign: "center",
        displayIndent: "2em",

        "HTML-CSS": {
             scale: 100,
             availableFonts: ["STIX","TeX"],
             preferredFont: "TeX",
             webFont: "TeX",
             imageFont: "TeX",
             showMathMenu: true,
        },
        MMLorHTML: {
             prefer: {
                 MSIE:    "MML",
                 Firefox: "MML",
                 Opera:   "HTML",
                 other:   "HTML"
             }
        }
    });
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">cs546 Term Project: MPI Programming</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">How to install</a></li>
<li><a href="#sec-2">Usage</a></li>
<li><a href="#sec-3">Algorithms</a>
<ul>
<li><a href="#sec-3-1">ALGO 1</a></li>
<li><a href="#sec-3-2">ALGO 2</a></li>
<li><a href="#sec-3-3">ALGO 3</a></li>
<li><a href="#sec-3-4">ALGO 4</a></li>
</ul>
</li>
<li><a href="#sec-4">Results</a></li>
<li><a href="#sec-5">Reference</a></li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">How to install</h2>
<div class="outline-text-2" id="text-1">
<p>
on my mac: mpicc-mpich-gcc6 -o project project.c 
</p>

<p>
This compiles the project source code.
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Usage</h2>
<div class="outline-text-2" id="text-2">
<p>
Usage: mpirun -np 8 ./project ALGO \n");
Where ALGO = 1, 2, 3, or 4
algo 1 is part a
algo 2 is part b
algo 3 is part c
algo 4 is a serial implementation (No parallelism)
and number of processors is 1 for algo 4, 8 for algo 3 and 2, 4, or 8 for algos 1 and 2
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Algorithms</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1">ALGO 1</h3>
<div class="outline-text-3" id="text-3-1">
<p>
   This algorithm relies only on <b>MPI_Send</b> and <b>MPI_Recv</b> calls. 
 The algorithm starts by having each process read in the two input files into local global memory.
 The processes then compute the row-wise Fast Fourier Transform of 512/number of processors number of rows.
 The processes then each send the row-wise FFTs to the root node, which then computes the transpose and scatters
the requisite rows back to the regular nodes. This involves 2*num_procs MPI_Recvs and 2*num_procs MPI_Sends for the root node.
 Each other node only sends 2 Recvs and Sends respectively. The next step is another FFT. Then return the data to the root like before,
 and then calculate C = MM_point(A,B) of 512/num_procs rows of C per processor.
 Finally the process for the inverse FFT is the same as for task 1 and 2. In this algorithm I do task 1 and 2 at the same time, then task 3 followed by task 4.
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="right" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">#procs</th>
<th scope="col" class="right">2</th>
<th scope="col" class="right">4</th>
<th scope="col" class="right">8</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">algo1</td>
<td class="right">0.014</td>
<td class="right">0.018</td>
<td class="right">0.034</td>
</tr>
</tbody>
</table>

<p>
From the data we can see that the amount of synchronization and communication overhead causes the speedup to become worse with the number of processors added.
</p>
</div>
</div>


<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2">ALGO 2</h3>
<div class="outline-text-3" id="text-3-2">
<p>
  This algorithm is very similar to the previous one. However the major difference is that instead of gathering information at the root iteratively,
this algorithm uses MPI_AllGather which enables each process to send and recieve the full matricies faster.
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="right" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">#procs</th>
<th scope="col" class="right">2</th>
<th scope="col" class="right">4</th>
<th scope="col" class="right">8</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">algo2</td>
<td class="right">0.015</td>
<td class="right">0.015</td>
<td class="right">0.018</td>
</tr>
</tbody>
</table>

<p>
Here the data shows us that there is no performance improvement or significant reduction of performance when increasing number of processors.
This is likely because the MPI communication pattern is more efficient.
</p>
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3">ALGO 3</h3>
<div class="outline-text-3" id="text-3-3">
<p>
  This algorithm is split into 4 groups. Group 1 and 2 work on computing task 1 and 2 respectively. When they finish computing, they send 
their data to all the processes in group 3. At this point group 3 processes work on task 3. When the matrix C is computed they send 
the result to all processes in group 4. Group 4 computes the reverse FFT to obtain D.
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="right" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">#procs</th>
<th scope="col" class="right">2</th>
<th scope="col" class="right">4</th>
<th scope="col" class="right">8</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">algo3</td>
<td class="right">---</td>
<td class="right">---</td>
<td class="right">0.032</td>
</tr>
</tbody>
</table>

<p>
Here we see that the performance is about equal to algorithm 1  but not as good as algorithm 2. This is likely because there is less parallelism.
 Tasks 3 and 4 need to wait until all previous tasks are finished running.
</p>
</div>
</div>


<div id="outline-container-sec-3-4" class="outline-3">
<h3 id="sec-3-4">ALGO 4</h3>
<div class="outline-text-3" id="text-3-4">
<p>
This algorithm is a sequential implemenation of the project to use as a baseline. No MPI is invilved here.
</p>


<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="right" />

<col  class="right" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">#procs</th>
<th scope="col" class="right">1</th>
<th scope="col" class="right">2</th>
<th scope="col" class="right">4</th>
<th scope="col" class="right">8</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">algo4</td>
<td class="right">0.013</td>
<td class="right">---</td>
<td class="right">---</td>
<td class="right">---</td>
</tr>
</tbody>
</table>

<p>
Sequential is fast because the input sizes are not that large.
</p>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">Results</h2>
<div class="outline-text-2" id="text-4">
<p>
Empirical data from Comet on XSEDE 
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="right" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">#procs</th>
<th scope="col" class="left">1</th>
<th scope="col" class="right">2</th>
<th scope="col" class="right">4</th>
<th scope="col" class="right">8</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">algo1</td>
<td class="left">---</td>
<td class="right">0.014</td>
<td class="right">0.018</td>
<td class="right">0.034</td>
</tr>

<tr>
<td class="left">algo2</td>
<td class="left">---</td>
<td class="right">0.015</td>
<td class="right">0.015</td>
<td class="right">0.018</td>
</tr>

<tr>
<td class="left">algo3</td>
<td class="left">---</td>
<td class="right">---</td>
<td class="right">---</td>
<td class="right">0.032</td>
</tr>

<tr>
<td class="left">algo4</td>
<td class="left">0.013</td>
<td class="right">---</td>
<td class="right">---</td>
<td class="right">---</td>
</tr>
</tbody>
</table>
</div>
</div>


<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5">Reference</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="https://stackoverflow.com/questions/459691/best-timing-method-in-c">https://stackoverflow.com/questions/459691/best-timing-method-in-c</a>
</li>
<li><a href="https://www.programiz.com/c-programming/examples/read-file">https://www.programiz.com/c-programming/examples/read-file</a>
</li>
</ul>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Author: Christopher Hannon</p>
<p class="date">Created: 2017-12-08 Fri 12:13</p>
<p class="creator"><a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.2.1 (<a href="http://orgmode.org">Org</a> mode 8.2.10)</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
